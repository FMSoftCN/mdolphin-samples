dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.59)
AC_INIT(mdolphin-samples, 3.0.4, www.minigui.com)

dnl ========================================================================
dnl needed for cross-compiling
AC_CANONICAL_SYSTEM

dnl ========================================================================
dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CXX
AC_PROG_CC
AC_PROG_LIBTOOL

AM_INIT_AUTOMAKE(mdolphin-samples, 3.0.4)

dnl ========================================================================
dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl ========================================================================
dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME
AC_CHECK_HEADERS(sys/time.h unistd.h)

dnl ========================================================================
dnl check for libminigui
have_libminigui="no"
AC_CHECK_HEADERS(minigui/common.h, have_libminigui=yes, foo=bar)

dnl ========================================================================
dnl check for non-UNIX system
unix="yes"
AC_CHECK_DECLS(__NOUNIX__, unix="no", foo=bar)

dnl ========================================================================
dnl check for run-time mode of MiniGUI
dnl ========================================================================
threads_version="no"
AC_CHECK_DECLS(_MGRM_THREADS, threads_version="yes", foo=bar, [#include <minigui/common.h>])

custom_version="no"
AC_CHECK_DECLS(_MGIAL_CUSTOM, custom_version="yes", foo=bar, [#include <minigui/common.h>])

procs_version="no"
AC_CHECK_DECLS(_MGRM_PROCESSES, procs_version="yes", foo=bar, [#include <minigui/common.h>])

standalone_version="no"
AC_CHECK_DECLS(_MGRM_STANDALONE, standalone_version="yes", foo=bar, [#include <minigui/common.h>])

AC_ARG_WITH(lang,
        [  --with-lang=[en/zhcn/zhtw]])

case "$with_lang" in
  zhcn)
    AC_DEFINE(_LANG_ZHCN, 1, 
            [Use text strings for locale zh_CN in GB2312])
    ;;
  zhtw)
    AC_DEFINE(_LANG_ZHTW, 1, 
            [Use text strings for locale zh_TW in BIG5])
    ;;
  *)
    AC_DEFINE(_LANG_EN, 1, 
            [Use text strings for locale en_US in ISO8859-1])
    ;;
esac

dnl ========================================================================
dnl Write Output

if test "$ac_cv_prog_gcc" = "yes"; then
    CFLAGS="$CFLAGS -Wall -Wstrict-prototypes -pipe"
fi

AC_CHECK_DECLS(_MGLIB_SUFFIX, build_minigui_v3="yes", foo=bar, [[#include <minigui/common.h>]] )
AM_CONDITIONAL(MINIGUI_V3, test "x$build_minigui_v3" = "xyes")


dnl ========================================================================
dnl check for libmdolphin
have_libmdolphin="no"
AC_CHECK_HEADERS(mdolphin/mdconfig.h, have_libmdolphin=yes, foo=bar)

LIBS="$LIBS  -lmdolphin"

if test "x$build_minigui_v3" = "xyes"; then
    if test "x$threads_version" = "xyes"; then
        if test "x$custom_version" = "xyes"; then
            LIBS="$LIBS -lminigui_cstm -lpthread"
        else
            LIBS="$LIBS -lminigui_ths -lpthread"
        fi
    else
        if test "x$standalone_version" = "xyes"; then
            CFLAGS="$CFLAGS -D_REENTRANT"
            if test "x$custom_version" = "xyes"; then
                LIBS="$LIBS -lminigui_cstm"
            else
                LIBS="$LIBS -lminigui_sa"
            fi
        else
            if test "x$custom_version" = "xyes"; then
                LIBS="$LIBS -lminigui_cstm"
            else
                LIBS="$LIBS -lminigui_procs"
            fi
        fi
        lib_pthread="yes"
        AC_CHECK_DECLS(_MGGAL_SHADOW, LIBS="$LIBS -lpthread", lib_pthread="no", [#include <minigui/common.h>])
        if test "x$lib_pthread" = "xno"; then
            AC_CHECK_DECLS(_MGGAL_MLSHADOW, LIBS="$LIBS -lpthread", no_pthread="no", [#include <minigui/common.h>])
        fi
    fi
else
    if test "x$threads_version" = "xyes"; then
        CFLAGS="$CFLAGS -D_REENTRANT"
        LIBS="$LIBS -lpthread -lminigui"
    else
        LIBS="$LIBS -lminigui"
    fi
fi

if test "x$build_minigui_v3" = "xyes"; then
AC_CHECK_DECLS(_MGFONT_TTF, LIBS="$LIBS -lttf", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_MGFONT_FT2, LIBS="$LIBS -lfreetype", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_MGFONT_SEF, LIBS="$LIBS -lscripteasy", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_HAVE_MATH_LIB, LIBS="$LIBS -lm", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_MGIMAGE_PNG, LIBS="$LIBS -lpng", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_MGIMAGE_JPG, LIBS="$LIBS -ljpeg", foo=bar, [#include <minigui/common.h>])
else
AC_CHECK_DECLS(_HAVE_MATH_LIB, LIBS="$LIBS -lm", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_PNG_FILE_SUPPORT, LIBS="$LIBS -lpng", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_PNG_FILE_SUPPORT, LIBS="$LIBS -lpthread", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_JPG_FILE_SUPPORT, LIBS="$LIBS -ljpeg", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_TYPE1_SUPPORT, LIBS="$LIBS -lt1", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_TTF_SUPPORT, LIBS="$LIBS -lttf", foo=bar, [#include <minigui/common.h>])
AC_CHECK_DECLS(_FT2_SUPPORT, LIBS="$LIBS -lfreetype", foo=bar, [#include <minigui/common.h>])
fi


AM_CONDITIONAL(MGRM_PROCESSES, test "x$procs_version" = "xyes")


# add curl to build option
CFLAGS="$CFLAGS `curl-config --cflags`"
CXXFLAGS="$CXXFLAGS `curl-config --cflags`"
LIBS="$LIBS `curl-config --libs`"


# add xml2 to build option
#AC_CHECK_DECLS(ENABLE_XML, LIBS="$LIBS `xml2-config --libs`", foo=bar, [#include <mdolphin/mdconfig.h>])

# add xslt to build option
#AC_CHECK_DECLS(ENABLE_XSLT, LIBS="$LIBS `xslt-config --libs`", foo=bar, [#include <mdolphin/mdconfig.h>])

CFLAGS="$CFLAGS -Wall -pipe" 
CXXFLAGS="$CXXFLAGS -Wall -Wno-strict-aliasing -pipe"
LIBS="$LIBS -lpthread"

AC_OUTPUT(
Makefile
pc/Makefile
pc-3/Makefile
pda/Makefile 
mobile/Makefile
spider/Makefile
triangle/Makefile
dnl iphone/Makefile  
dnl custom/Makefile
simplespider/Makefile
)
if test "x$have_libminigui" != "xyes"; then
    AC_MSG_WARN([
        MiniGUI is not properly installed on the system. You need 
        MiniGUI Ver 3.0.12 or later for building this package. 
        Please configure and install MiniGUI Ver 3.0.12 first.
    ])
fi

if test "x$have_libmdolphin" != "xyes"; then
    AC_MSG_WARN([
        MDolphin is not properly installed on the system. You need 
        MDolphin Ver 3.0.4 or later for building this package. 
        Please configure and install MDolphin Ver 3.0.4 first.
    ])
fi

